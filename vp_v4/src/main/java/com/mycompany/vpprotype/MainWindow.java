/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.vpprotype;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;



// ========== TODO
// ========== * Implement Radio Buttons to switch between the table and video view of the
// ==========   scollPane_video_data view viewPortView
//=========== * Toggle the endabled state of Open, Save, SaveAs menuItems

public class MainWindow extends javax.swing.JFrame {

    private Double[][]  runData;
    private Object[]    columnHeaders;   
    private JCheckBox[] inputs;
    private JComboBox[] colorSelections;
   
// ========== TODO: 
// ========== * Add these instance variables to the data model
    private File        dataFile;       
    private File        videoFile;
// =========

    
    private Color[] colors;
    private String currentDirectory;
    
    private DataModel model;
        
    public MainWindow() {
        initComponents();

        initializeLineColors();
        initializeLineSelectors();
        initializeColorSelectors();
        
        // Hides all of the grpah controls until file data is loaded
        panel_graphInputs.setVisible(false);
 
        // Sets the default directory to the DATFile directory in the project folder.
        currentDirectory = "DATFiles\\";

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        table_dataTable = new javax.swing.JTable();
        panel_videoPanel = new javax.swing.JPanel();
        panel_graphInputs = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jComboBox8 = new javax.swing.JComboBox<>();
        jComboBox9 = new javax.swing.JComboBox<>();
        jComboBox10 = new javax.swing.JComboBox<>();
        jComboBox11 = new javax.swing.JComboBox<>();
        jComboBox12 = new javax.swing.JComboBox<>();
        panel_graphDisplayElements = new javax.swing.JPanel();
        scrollPane_graph = new javax.swing.JScrollPane();
        graphPanel = new GraphPanel();
        textField_videoFile = new javax.swing.JTextField();
        button_dataFileChooser = new javax.swing.JButton();
        button_videoFileChooser = new javax.swing.JButton();
        label_videoFile = new javax.swing.JLabel();
        textField_graphFile = new javax.swing.JTextField();
        label_graphFile = new javax.swing.JLabel();
        slider = new javax.swing.JSlider();
        scrollPane_data_video = new javax.swing.JScrollPane();
        jButton1 = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        menu_file = new javax.swing.JMenu();
        menuItem_open = new javax.swing.JMenuItem();
        menuItem_save = new javax.swing.JMenuItem();
        menuItem_saveAs = new javax.swing.JMenuItem();
        menuItem_close = new javax.swing.JMenuItem();
        menuItem_settings = new javax.swing.JMenuItem();
        menu_edit = new javax.swing.JMenu();

        table_dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));

        javax.swing.GroupLayout panel_videoPanelLayout = new javax.swing.GroupLayout(panel_videoPanel);
        panel_videoPanel.setLayout(panel_videoPanelLayout);
        panel_videoPanelLayout.setHorizontalGroup(
            panel_videoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panel_videoPanelLayout.setVerticalGroup(
            panel_videoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jCheckBox1.setText("jCheckBox1");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("jCheckBox2");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("jCheckBox3");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("jCheckBox4");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setText("jCheckBox5");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setText("jCheckBox6");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jCheckBox7.setText("jCheckBox7");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setText("jCheckBox8");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jCheckBox9.setText("jCheckBox9");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        jCheckBox10.setText("jCheckBox10");
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });

        jCheckBox11.setText("jCheckBox11");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        jCheckBox12.setText("jCheckBox12");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox1.setSelectedIndex(1);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox2.setSelectedIndex(2);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox3.setSelectedIndex(3);
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox4.setSelectedIndex(4);
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox5.setSelectedIndex(5);
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox6.setSelectedIndex(6);
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox7.setSelectedIndex(7);
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox8.setSelectedIndex(8);
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox8ActionPerformed(evt);
            }
        });

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox9.setSelectedIndex(9);
        jComboBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox9ActionPerformed(evt);
            }
        });

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox10.setSelectedIndex(1);
        jComboBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox10ActionPerformed(evt);
            }
        });

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox11.setSelectedIndex(2);
        jComboBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox11ActionPerformed(evt);
            }
        });

        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "black", "blue", "cyan", "green", "magenta", "orange", "pink", "red", "yellow", "light gray" }));
        jComboBox12.setSelectedIndex(3);
        jComboBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_graphInputsLayout = new javax.swing.GroupLayout(panel_graphInputs);
        panel_graphInputs.setLayout(panel_graphInputsLayout);
        panel_graphInputsLayout.setHorizontalGroup(
            panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_graphInputsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox12)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox9)
                    .addComponent(jCheckBox10)
                    .addComponent(jCheckBox11)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox5))
                .addGap(20, 20, 20))
        );
        panel_graphInputsLayout.setVerticalGroup(
            panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_graphInputsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox5))
                .addGap(3, 3, 3)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox12))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        graphPanel.setPreferredSize(new java.awt.Dimension(600, 400));

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 663, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );

        scrollPane_graph.setViewportView(graphPanel);

        textField_videoFile.setEditable(false);

        button_dataFileChooser.setText("Choose File");
        button_dataFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_dataFileChooserActionPerformed(evt);
            }
        });

        button_videoFileChooser.setText("Choose File");
        button_videoFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_videoFileChooserActionPerformed(evt);
            }
        });

        label_videoFile.setText("Video File:");

        textField_graphFile.setEditable(false);

        label_graphFile.setText("Data File:");

        slider.setValue(0);
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panel_graphDisplayElementsLayout = new javax.swing.GroupLayout(panel_graphDisplayElements);
        panel_graphDisplayElements.setLayout(panel_graphDisplayElementsLayout);
        panel_graphDisplayElementsLayout.setHorizontalGroup(
            panel_graphDisplayElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_graphDisplayElementsLayout.createSequentialGroup()
                .addGroup(panel_graphDisplayElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_graphDisplayElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(scrollPane_graph, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panel_graphDisplayElementsLayout.createSequentialGroup()
                            .addGroup(panel_graphDisplayElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panel_graphDisplayElementsLayout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(label_videoFile)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textField_videoFile))
                                .addGroup(panel_graphDisplayElementsLayout.createSequentialGroup()
                                    .addComponent(label_graphFile)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(textField_graphFile)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(panel_graphDisplayElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(button_dataFileChooser, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(button_videoFileChooser))))
                    .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel_graphDisplayElementsLayout.setVerticalGroup(
            panel_graphDisplayElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_graphDisplayElementsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_graphDisplayElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_videoFile)
                    .addComponent(textField_videoFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_videoFileChooser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_graphDisplayElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_graphFile)
                    .addComponent(textField_graphFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_dataFileChooser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane_graph, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        scrollPane_data_video.setPreferredSize(new java.awt.Dimension(600, 400));

        jButton1.setText("Alert Box");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        menu_file.setText("File");

        menuItem_open.setText("Open");
        menuItem_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_openActionPerformed(evt);
            }
        });
        menu_file.add(menuItem_open);

        menuItem_save.setText("Save");
        menuItem_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_saveActionPerformed(evt);
            }
        });
        menu_file.add(menuItem_save);

        menuItem_saveAs.setText("Save As");
        menuItem_saveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_saveAsActionPerformed(evt);
            }
        });
        menu_file.add(menuItem_saveAs);

        menuItem_close.setText("Close");
        menuItem_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_closeActionPerformed(evt);
            }
        });
        menu_file.add(menuItem_close);

        menuItem_settings.setText("Settings");
        menuItem_settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_settingsActionPerformed(evt);
            }
        });
        menu_file.add(menuItem_settings);

        jMenuBar.add(menu_file);

        menu_edit.setText("Edit");
        jMenuBar.add(menu_edit);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel_graphInputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addGap(30, 30, 30)
                .addComponent(panel_graphDisplayElements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrollPane_data_video, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_graphInputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_graphDisplayElements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(scrollPane_data_video, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox9ActionPerformed
   
    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        int slideValue = slider.getValue();       
        ((GraphPanel) graphPanel).setScaleFactor(slideValue);
    }//GEN-LAST:event_sliderStateChanged
  
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jComboBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox9ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox9ActionPerformed

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox8ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jComboBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox10ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox10ActionPerformed

    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox11ActionPerformed

    private void jComboBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox12ActionPerformed
        buildGraph();
    }//GEN-LAST:event_jComboBox12ActionPerformed

    private void button_dataFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_dataFileChooserActionPerformed
        
        // Crrste a file chooser object to read files from the drive
        JFileChooser jfc = new JFileChooser(currentDirectory);
        
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            loadDataFile(file);
            
            currentDirectory = jfc.getCurrentDirectory().toString();
            
        }
        
    }//GEN-LAST:event_button_dataFileChooserActionPerformed

    private void menuItem_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_saveActionPerformed
       
        try {
        
            JFileChooser jfc = new JFileChooser(currentDirectory);

            if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jfc.getSelectedFile();        

                FileOutputStream fos = new FileOutputStream(file);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                
                // Create a data model out of all of the program save data
                if (runData == null)    return;

                DataModel model = new DataModel(runData, columnHeaders, inputs, colorSelections,  currentDirectory);
                 
                oos.writeObject(model);

                oos.close();
                fos.close();
              
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_menuItem_saveActionPerformed

    private void menuItem_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_openActionPerformed
        try {
        
            JFileChooser jfc = new JFileChooser(currentDirectory);

            if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jfc.getSelectedFile();        

                FileInputStream fis = new FileInputStream(file);
                ObjectInputStream ois = new ObjectInputStream(fis);
                
                DataModel model = (DataModel)ois.readObject();
                
                runData = model.getRunData();
                columnHeaders = model.getColumnHeaders();   
                inputs = model.getInputs();
                colorSelections = model.getColorSelections();
                currentDirectory = model.getCurrentDirectory();
                
                
// ========== TODO: 
// ========== * Reset the state of the graph controls to match the state of the saved controls
// ========== * Update the file text fields with the appropriate file name state of the saved controls



                buildGraph();
                panel_graphInputs.setVisible(true);
 
                ois.close();
                fis.close();
              
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }       // TODO add your handling code here:
    }//GEN-LAST:event_menuItem_openActionPerformed

    private void button_videoFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_videoFileChooserActionPerformed
            //Temp code to play the viedo until the filechooser works
            panel_videoPanel = new VideoPanel();
            
            scrollPane_data_video.setViewportView(panel_videoPanel);
            
            panel_videoPanel.setVisible(true);
            scrollPane_data_video.setVisible(true);
            
            File videoFile = new File("VideoFiles\\MotorInvestigation.mp4");
            
            ((VideoPanel)panel_videoPanel).play(dataFile);
// ========== TODO: 
// ========== * Enable the Vido File chooser
// ========== * Upate instance variable with file name

    }//GEN-LAST:event_button_videoFileChooserActionPerformed

    private void menuItem_saveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_saveAsActionPerformed
// ========== TODO: 
// ========== * When selected, check to see if the their is a current file, if not call the save method.
// ========== * If not, open a file chooser and choose the file to be saved.
    }//GEN-LAST:event_menuItem_saveAsActionPerformed

    private void menuItem_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_closeActionPerformed
// ========== TODO: 
// ========== * Prompt the user to see if they wnat to save the file before closing

    }//GEN-LAST:event_menuItem_closeActionPerformed

    private void menuItem_settingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_settingsActionPerformed
// ========== TODO: 
// ========== * Create a preference file for
// ==========    - Data File director
// ==========    - Save File Directory
// ==========    - When program launches, set it so that it looks in these directories first
    }//GEN-LAST:event_menuItem_settingsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Test Alert bok using a JOptionPane.
        
        //JOptionPane.showMessageDialog(this, "This is a test to see if it actually works");
        JOptionPane.showMessageDialog(this, "Your are about to download a virus", "VIRUS Warning", JOptionPane.WARNING_MESSAGE);
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_dataFileChooser;
    private javax.swing.JButton button_videoFileChooser;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox11;
    private javax.swing.JComboBox<String> jComboBox12;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JLabel label_graphFile;
    private javax.swing.JLabel label_videoFile;
    private javax.swing.JMenuItem menuItem_close;
    private javax.swing.JMenuItem menuItem_open;
    private javax.swing.JMenuItem menuItem_save;
    private javax.swing.JMenuItem menuItem_saveAs;
    private javax.swing.JMenuItem menuItem_settings;
    private javax.swing.JMenu menu_edit;
    private javax.swing.JMenu menu_file;
    private javax.swing.JPanel panel_graphDisplayElements;
    private javax.swing.JPanel panel_graphInputs;
    private javax.swing.JPanel panel_videoPanel;
    private javax.swing.JScrollPane scrollPane_data_video;
    private javax.swing.JScrollPane scrollPane_graph;
    private javax.swing.JSlider slider;
    private javax.swing.JTable table_dataTable;
    private javax.swing.JTextField textField_graphFile;
    private javax.swing.JTextField textField_videoFile;
    // End of variables declaration//GEN-END:variables

    
    private void loadDataFile(File file) {
        
        try {
            Scanner data = new Scanner(file);
            
            // Load the column headers into a seperate Object array.
            Scanner headers = new Scanner(data.nextLine());
            headers.useDelimiter(",");
            
            // Get headers from data file first, then load to an array
            ArrayList<String> tempHeaders = new ArrayList<>();
            
            while (headers.hasNext()){
                tempHeaders.add(headers.next());
            }
            
            // Convert the tempHeaders list into an Array
            columnHeaders = tempHeaders.toArray();


            // Reads the rest of the data and assigns to a 2D ArrayList.
            // Then writes the data from the 2D ArrayList to the 2D Array
            ArrayList<String> lineArrayList = new ArrayList<>();

            // Adds each line to an ArrayList so that the total number of rows
            // can be calculated for the 2D arry or data
            while (data.hasNextLine()){
                lineArrayList.add(data.nextLine());
            }
            
            // Set up the 2D Array and add data to the array by looping through the
            // ArrayList
            runData = new Double[lineArrayList.size()][columnHeaders.length];
            
            for (int row=0; row<lineArrayList.size(); row++) {
                
                Scanner line = new Scanner(lineArrayList.get(row));
                line.useDelimiter(",");
                
                int column=0;
                
                while (line.hasNext()) {
                    runData[row][column] = Math.abs(Double.parseDouble(line.next()));
                    column++;
                }
    
            }
            
            // AutoPopulate the text for the checkboxes
            for (int i=1; i<columnHeaders.length; i++) {
                inputs[i].setText((String)columnHeaders[i]);
            }
            
                       
            // Show the Controls panel so that all of the graph inputs will be visible
            panel_graphInputs.setVisible(true);
            
            // Update the the file test field so that users know which file is
            // the current file.
            textField_graphFile.setText(file.getName());
            
            // Load the data table with all data
            table_dataTable = new JTable(runData, columnHeaders);
            scrollPane_data_video.setViewportView(table_dataTable);
            
            // Set all of the Graph Control components to visible
            // Reset all of the checkboxes and comboBoxes
            // TODO: reset colorSelections
            for (int i=0; i<inputs.length; i++) {
                inputs[i].setVisible(true);
                inputs[i].setSelected(false);
                colorSelections[i].setVisible(true);
            }
            
            // hide unused controls (checkboxes and color selectors) 
            // based on the size of the column headers list.  
            int startIndex = columnHeaders.length;
            
            for (int i = startIndex; i < inputs.length; i++) {
                inputs[i].setVisible(false);
                colorSelections[i].setVisible(false);
            }
            
            // Clear the Graph panel of any graphs from the previous files
            buildGraph();
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void buildGraph() {
        
        // When a checkbox is clicked, the method is called to graph all data
        // with a selected checkbox.  Loops through each item in the inputs array
        //  and checks to see if the checkbox is selected.  Then, gets the data from a column in  
        // the viewPort1Data 2D Array and converts it to a double[] array to be graphed.
        
        ArrayList<Line> lines = new ArrayList<>();
        
        for (int i=0; i<inputs.length; i++) {
            
            // Graphs the line if the boolean array value is true
            // Picts the color of the line based on index of the column
            if (inputs[i].isSelected()){
                
                double[] data = getLineData(i);
                Color color = colors[colorSelections[i].getSelectedIndex()];
              
                lines.add(new Line(data, color));
              
            }
            
        } 
     
        ((GraphPanel)graphPanel).setLines(lines);
    
    }

    private double[] getLineData(int i) {
        // Returns an array of double that contains all the values in the 
        // specified column
        double[] data = new double[runData.length];
        
        for (int row=0; row<runData.length; row++){           
            data[row] = runData[row][i];
        }
        
        return data;
        
    }

    private void initializeLineColors() {
        // These color values correspond to the colors of the graphed data lines.
        
        colors = new Color[13];
        colors[0] = Color.BLACK;
        colors[1] = Color.BLUE;
        colors[2] = Color.CYAN;
        colors[3] = Color.GREEN;
        colors[4] = Color.MAGENTA;
        colors[5] = Color.ORANGE;
        colors[6] = Color.PINK;
        colors[7] = Color.RED;
        colors[8] = Color.YELLOW;
        colors[9] = Color.LIGHT_GRAY;
        colors[10] = Color.BLUE;
        colors[11] = Color.CYAN;
        colors[12] = Color.GREEN;
        
    }

    private void initializeLineSelectors() {
        inputs = new JCheckBox[13];
        inputs[0] = new JCheckBox();
        inputs[1] = jCheckBox1;
        inputs[2] = jCheckBox2;
        inputs[3] = jCheckBox3;
        inputs[4] = jCheckBox4;
        inputs[5] = jCheckBox5;
        inputs[6] = jCheckBox6;
        inputs[7] = jCheckBox7;
        inputs[8] = jCheckBox8;
        inputs[9] = jCheckBox9;
        inputs[10] = jCheckBox10;
        inputs[11] = jCheckBox11;
        inputs[12] = jCheckBox12;
    }

    private void initializeColorSelectors() {
        colorSelections = new JComboBox[13];
        colorSelections[0] = new JComboBox();
        colorSelections[1] = jComboBox1;
        colorSelections[2] = jComboBox2; 
        colorSelections[3] = jComboBox3; 
        colorSelections[4] = jComboBox4; 
        colorSelections[5] = jComboBox5; 
        colorSelections[6] = jComboBox6; 
        colorSelections[7] = jComboBox7; 
        colorSelections[8] = jComboBox8;
        colorSelections[9] = jComboBox9;
        colorSelections[10] = jComboBox10;
        colorSelections[11] = jComboBox11;
        colorSelections[12] = jComboBox12;
    }


}
